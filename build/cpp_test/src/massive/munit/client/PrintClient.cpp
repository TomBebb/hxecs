// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_massive_munit_IAdvancedTestResultClient
#include <massive/munit/IAdvancedTestResultClient.h>
#endif
#ifndef INCLUDED_massive_munit_ICoverageTestResultClient
#include <massive/munit/ICoverageTestResultClient.h>
#endif
#ifndef INCLUDED_massive_munit_ITestResultClient
#include <massive/munit/ITestResultClient.h>
#endif
#ifndef INCLUDED_massive_munit_client_AbstractTestResultClient
#include <massive/munit/client/AbstractTestResultClient.h>
#endif
#ifndef INCLUDED_massive_munit_client_PrintClient
#include <massive/munit/client/PrintClient.h>
#endif
#ifndef INCLUDED_massive_munit_client_PrintClientBase
#include <massive/munit/client/PrintClientBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ac2a6e5526bb1197_71_new,"massive.munit.client.PrintClient","new",0x365789ae,"massive.munit.client.PrintClient.new","massive/munit/client/PrintClient.hx",71,0x6b1c8b41)
HX_LOCAL_STACK_FRAME(_hx_pos_ac2a6e5526bb1197_77_init,"massive.munit.client.PrintClient","init",0x52f9a602,"massive.munit.client.PrintClient.init","massive/munit/client/PrintClient.hx",77,0x6b1c8b41)
HX_LOCAL_STACK_FRAME(_hx_pos_ac2a6e5526bb1197_128_printOverallResult,"massive.munit.client.PrintClient","printOverallResult",0xf1eb170f,"massive.munit.client.PrintClient.printOverallResult","massive/munit/client/PrintClient.hx",128,0x6b1c8b41)
HX_LOCAL_STACK_FRAME(_hx_pos_ac2a6e5526bb1197_139_customTrace,"massive.munit.client.PrintClient","customTrace",0xd6ceac62,"massive.munit.client.PrintClient.customTrace","massive/munit/client/PrintClient.hx",139,0x6b1c8b41)
HX_LOCAL_STACK_FRAME(_hx_pos_ac2a6e5526bb1197_143_print,"massive.munit.client.PrintClient","print",0x51ea80fb,"massive.munit.client.PrintClient.print","massive/munit/client/PrintClient.hx",143,0x6b1c8b41)
HX_LOCAL_STACK_FRAME(_hx_pos_ac2a6e5526bb1197_59_boot,"massive.munit.client.PrintClient","boot",0x4e59ef24,"massive.munit.client.PrintClient.boot","massive/munit/client/PrintClient.hx",59,0x6b1c8b41)
namespace massive{
namespace munit{
namespace client{

void PrintClient_obj::__construct( ::Dynamic __o_includeIgnoredReport){
 ::Dynamic includeIgnoredReport = __o_includeIgnoredReport.Default(true);
            	HX_STACKFRAME(&_hx_pos_ac2a6e5526bb1197_71_new)
HXLINE(  72)		super::__construct(includeIgnoredReport);
HXLINE(  73)		this->id = HX_("print",2d,58,8b,c8);
            	}

Dynamic PrintClient_obj::__CreateEmpty() { return new PrintClient_obj; }

void *PrintClient_obj::_hx_vtable = 0;

Dynamic PrintClient_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< PrintClient_obj > _hx_result = new PrintClient_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool PrintClient_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x233b8ad8) {
		if (inClassId<=(int)0x0097fcd8) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0097fcd8;
		} else {
			return inClassId==(int)0x233b8ad8;
		}
	} else {
		return inClassId==(int)0x54aae2d1;
	}
}

void PrintClient_obj::init(){
            	HX_STACKFRAME(&_hx_pos_ac2a6e5526bb1197_77_init)
HXLINE(  78)		this->super::init();
HXLINE(  90)		this->originalTrace = ::haxe::Log_obj::trace;
HXLINE(  91)		::haxe::Log_obj::trace = this->customTrace_dyn();
            	}


void PrintClient_obj::printOverallResult(bool result){
            	HX_STACKFRAME(&_hx_pos_ac2a6e5526bb1197_128_printOverallResult)
HXDLIN( 128)		this->super::printOverallResult(result);
            	}


void PrintClient_obj::customTrace( ::Dynamic value, ::Dynamic info){
            	HX_STACKFRAME(&_hx_pos_ac2a6e5526bb1197_139_customTrace)
HXDLIN( 139)		this->addTrace(value,info);
            	}


HX_DEFINE_DYNAMIC_FUNC2(PrintClient_obj,customTrace,(void))

void PrintClient_obj::print( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_ac2a6e5526bb1197_143_print)
HXLINE( 144)		this->super::print(value);
HXLINE( 154)		::Sys_obj::print(value);
            	}


::String PrintClient_obj::DEFAULT_ID;


hx::ObjectPtr< PrintClient_obj > PrintClient_obj::__new( ::Dynamic __o_includeIgnoredReport) {
	hx::ObjectPtr< PrintClient_obj > __this = new PrintClient_obj();
	__this->__construct(__o_includeIgnoredReport);
	return __this;
}

hx::ObjectPtr< PrintClient_obj > PrintClient_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic __o_includeIgnoredReport) {
	PrintClient_obj *__this = (PrintClient_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(PrintClient_obj), true, "massive.munit.client.PrintClient"));
	*(void **)__this = PrintClient_obj::_hx_vtable;
	__this->__construct(__o_includeIgnoredReport);
	return __this;
}

PrintClient_obj::PrintClient_obj()
{
}

hx::Val PrintClient_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"init") ) { return hx::Val( init_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"print") ) { return hx::Val( print_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"customTrace") ) { return hx::Val( customTrace_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"printOverallResult") ) { return hx::Val( printOverallResult_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *PrintClient_obj_sMemberStorageInfo = 0;
static hx::StaticInfo PrintClient_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &PrintClient_obj::DEFAULT_ID,HX_HCSTRING("DEFAULT_ID","\xf9","\x83","\x2f","\x18")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String PrintClient_obj_sMemberFields[] = {
	HX_HCSTRING("init","\x10","\x3b","\xbb","\x45"),
	HX_HCSTRING("printOverallResult","\x9d","\x28","\x2a","\x6e"),
	HX_HCSTRING("customTrace","\x14","\xf5","\x5b","\xab"),
	HX_HCSTRING("print","\x2d","\x58","\x8b","\xc8"),
	::String(null()) };

static void PrintClient_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(PrintClient_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(PrintClient_obj::DEFAULT_ID,"DEFAULT_ID");
};

#ifdef HXCPP_VISIT_ALLOCS
static void PrintClient_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(PrintClient_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(PrintClient_obj::DEFAULT_ID,"DEFAULT_ID");
};

#endif

hx::Class PrintClient_obj::__mClass;

static ::String PrintClient_obj_sStaticFields[] = {
	HX_HCSTRING("DEFAULT_ID","\xf9","\x83","\x2f","\x18"),
	::String(null())
};

void PrintClient_obj::__register()
{
	hx::Object *dummy = new PrintClient_obj;
	PrintClient_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("massive.munit.client.PrintClient","\xbc","\xda","\x51","\x01");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = PrintClient_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(PrintClient_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(PrintClient_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< PrintClient_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = PrintClient_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PrintClient_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PrintClient_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void PrintClient_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_ac2a6e5526bb1197_59_boot)
HXDLIN(  59)		DEFAULT_ID = HX_("print",2d,58,8b,c8);
            	}
}

} // end namespace massive
} // end namespace munit
} // end namespace client
