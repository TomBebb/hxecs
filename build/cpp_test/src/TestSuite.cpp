// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_ExampleTest
#include <ExampleTest.h>
#endif
#ifndef INCLUDED_TestSuite
#include <TestSuite.h>
#endif
#ifndef INCLUDED_massive_munit_TestSuite
#include <massive/munit/TestSuite.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_58d7e2718ae35b71_12_new,"TestSuite","new",0x1792e8d8,"TestSuite.new","TestSuite.hx",12,0xf6ebf998)

void TestSuite_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_58d7e2718ae35b71_12_new)
HXLINE(  13)		super::__construct();
HXLINE(  15)		this->add(hx::ClassOf< ::ExampleTest >());
            	}

Dynamic TestSuite_obj::__CreateEmpty() { return new TestSuite_obj; }

void *TestSuite_obj::_hx_vtable = 0;

Dynamic TestSuite_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TestSuite_obj > _hx_result = new TestSuite_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TestSuite_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0ca6b002) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0ca6b002;
	} else {
		return inClassId==(int)0x6d5c0f79;
	}
}


hx::ObjectPtr< TestSuite_obj > TestSuite_obj::__new() {
	hx::ObjectPtr< TestSuite_obj > __this = new TestSuite_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< TestSuite_obj > TestSuite_obj::__alloc(hx::Ctx *_hx_ctx) {
	TestSuite_obj *__this = (TestSuite_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TestSuite_obj), true, "TestSuite"));
	*(void **)__this = TestSuite_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TestSuite_obj::TestSuite_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *TestSuite_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *TestSuite_obj_sStaticStorageInfo = 0;
#endif

static void TestSuite_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TestSuite_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TestSuite_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TestSuite_obj::__mClass,"__mClass");
};

#endif

hx::Class TestSuite_obj::__mClass;

void TestSuite_obj::__register()
{
	hx::Object *dummy = new TestSuite_obj;
	TestSuite_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("TestSuite","\xe6","\xdc","\x8f","\xef");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TestSuite_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< TestSuite_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TestSuite_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TestSuite_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TestSuite_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

